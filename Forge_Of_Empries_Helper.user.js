// ==UserScript==
// @name        Forge Of Empries Helper
// @namespace   foe - helper
// @include     https://*.forgeofempires.com/game/index*
// @require     https://code.jquery.com/jquery-1.12.0.min.js
// @require     https://raw.githubusercontent.com/sytelus/CryptoJS/master/components/md5.js
// @grant       none
// @version     1
// ==/UserScript==
 
//Avoid conflicts

this.$ = this.jQuery = jQuery.noConflict(true);

// Generated by CoffeeScript 1.8.0
(function() {
  var KKCountdown;

  KKCountdown = (function() {
    KKCountdown.prototype.version = '1.4.2';

    KKCountdown.prototype.defaults = {
      dayText: 'day ',
      days2Text: 'days ',
      daysText: 'days ',
      hourText: '',
      hours2Text: '',
      hoursText: '',
      minutesText: ':',
      secondsText: '',
      textAfterCount: '---',
      oneDayClass: false,
      displayDays: true,
      displayZeroDays: true,
      displayHours: true,
      addClass: false,
      callback: false,
      warnSeconds: 60,
      warnClass: false,
      rusNumbers: false,
      boxContenerClass: 'kkcountdown-box',
      boxDaysClass: 'kkc-days',
      boxHoursClass: 'kkc-hours',
      boxMinClass: 'kkc-min',
      boxSecClass: 'kkc-sec',
      boxDaysTextClass: 'kkc-days-text',
      boxHoursTextClass: 'kkc-hours-text',
      boxMinTextClass: 'kkc-min-text',
      boxSecTextClass: 'kkc-sec-text'
    };

    function KKCountdown(el, options) {
      var _this;
      _this = this;
      this.opts = $.extend({}, this.defaults, options);
      this.$el = $(el);
      this.countdowns = [];
      this.prepareHTML();
      this.countdownInit(this.$el);
      this.$el.on('countdown:reset', function() {
        return _this.reset(_this.$el);
      });
    }

    KKCountdown.prototype.prepareHTML = function() {
      var box, boxDays, boxDaysText, boxHours, boxHoursText, boxMin, boxMinText, boxSec, boxSecText, _this;
      _this = this;
      box = $(document.createElement('span')).addClass(_this.opts.boxContenerClass);
      boxDays = $(document.createElement('span')).addClass(_this.opts.boxDaysClass);
      boxHours = $(document.createElement('span')).addClass(_this.opts.boxHoursClass);
      boxMin = $(document.createElement('span')).addClass(_this.opts.boxMinClass);
      boxSec = $(document.createElement('span')).addClass(_this.opts.boxSecClass);
      boxDaysText = $(document.createElement('span')).addClass(_this.opts.boxDaysTextClass);
      boxHoursText = $(document.createElement('span')).addClass(_this.opts.boxHoursTextClass);
      boxMinText = $(document.createElement('span')).addClass(_this.opts.boxMinTextClass);
      boxSecText = $(document.createElement('span')).addClass(_this.opts.boxSecTextClass);
      if (_this.opts.addClass) {
        box.addClass(_this.opts.addClass);
      }
      boxHoursText.html(_this.opts.hoursText);
      boxMinText.html(_this.opts.minutesText);
      boxSecText.html(_this.opts.secondsText);
      box.append(boxDays).append(boxDaysText).append(boxHours).append(boxHoursText).append(boxMin).append(boxMinText).append(boxSec).append(boxSecText);
      return this.$el.append(box);
    };

    KKCountdown.prototype.reset = function(obj) {
      if (obj.id !== void 0) {
        return obj.id = null;
      }
    };

    KKCountdown.prototype.countdownInit = function(obj) {
      var count, event, now, _this;
      count = 0;
      _this = this;
      if (obj.id === void 0 || obj.id === null) {
        obj.id = 'kk_' + Math.random(new Date().getTime());
      }
      if (_this.countdowns[obj.id] || _this.countdowns[obj.id] === 0) {
        count = _this.countdowns[obj.id];
      } else {
        count = obj.data('seconds');
      }
      if (count === void 0) {
        now = new Date();
        now = Math.floor(now.getTime() / 1000);
        event = obj.data('time');
        if (event === void 0) {
          event = obj.attr('time');
        }
        count = event - now;
      }
      _this.countdowns[obj.id] = count - 1;
      if (_this.opts.warnClass && count < _this.opts.warnSeconds) {
        obj.addClass(_this.opts.warnClass);
      }
      if (count <= 0) {
        obj.html(_this.opts.textAfterCount);
        if (_this.opts.callback) {
          return _this.opts.callback.call(obj);
        }
      } else if (count <= 24 * 60 * 60) {
        this.countdown(true, obj, count);
        return setTimeout(function() {
          return _this.countdownInit(obj);
        }, 1000);
      } else {
        this.countdown(false, obj, count);
        return setTimeout(function() {
          return _this.countdownInit(obj);
        }, 1000);
      }
    };

    KKCountdown.prototype.countdown = function(warning, obj, count) {
      var days, hours, minutes, seconds, _this;
      _this = this;
      seconds = this.fixTime(count % 60);
      count = Math.floor(count / 60);
      minutes = this.fixTime(count % 60);
      count = Math.floor(count / 60);
      hours = this.fixTime(count % 24);
      count = Math.floor(count / 24);
      days = count;
      if (_this.opts.oneDayClass && warning) {
        obj.addClass(_this.opts.oneDayClass);
      }
      if (_this.opts.displayDays) {
        if (days === 0 && _this.opts.displayZeroDays) {
          obj.find('.' + _this.opts.boxDaysClass).html(days);
          obj.find('.' + _this.opts.boxDaysTextClass).html(this.formatText(days, 'day'));
        } else if (days > 0) {
          obj.find('.' + _this.opts.boxDaysClass).html(days);
          obj.find('.' + _this.opts.boxDaysTextClass).html(this.formatText(days, 'day'));
        }
      }
      if (_this.opts.displayHours) {
          obj.find('.' + _this.opts.boxHoursClass).html(hours);
          obj.find('.' + _this.opts.boxHoursTextClass).html(this.formatText(hours, 'hour'));
      }
      obj.find('.' + _this.opts.boxMinClass).html(minutes);
      return obj.find('.' + _this.opts.boxSecClass).html(seconds);
    };

    KKCountdown.prototype.formatText = function(nr, text) {
      var daysText, lastDigit, _this;
      _this = this;
      daysText = _this.opts[text + 'sText'];
      if (_this.opts.rusNumbers) {
        if (nr >= 5 && nr < 20) {
          return daysText = _this.opts[text + 'sText'];
        } else {
          lastDigit = ("" + nr).replace(/^\d+(\d)$/, '$1') * 1;
          if (lastDigit === 1) {
            return daysText = _this.opts[text + 'Text'];
          } else {
            if (lastDigit >= 2 && lastDigit <= 4) {
              return daysText = _this.opts[text + 's2Text'];
            } else {
              return daysText = _this.opts[text + 'sText'];
            }
          }
        }
      } else {
        if (nr === 1) {
          return daysText = _this.opts[text + 'Text'];
        } else {
          return daysText = _this.opts[text + 'sText'];
        }
      }
    };

    KKCountdown.prototype.fixTime = function(nr) {
      if (nr < 10) {
        return nr = '0' + nr;
      } else {
        return nr = nr;
      }
    };

    return KKCountdown;

  })();

  $.fn.extend({
    kkcountdown: function(option) {
      return this.each(function() {
        var $this, data;
        $this = $(this);
        data = $this.data('kkcountdown');
        if (!data) {
          $this.data('kkcountdown', (data = new KKCountdown(this, option)));
        }
        if (typeof option === 'string') {
          return data[option].apply(data, args);
        }
      });
    }
  });

}).call(this);

Function.prototype.extractComment = function() {
    var startComment = "/*!";
    var endComment = "*/";
    var str = this.toString();

    var start = str.indexOf(startComment);
    var end = str.lastIndexOf(endComment);

    return str.slice(start + startComment.length, -(str.length - end));
};

function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function sleep(milliseconds) {
  var start = new Date().getTime();
  for (var i = 0; i < 1e7; i++) {
    if ((new Date().getTime() - start) > milliseconds){
      break;
    }
  }
}

function postFoe(cond, jsons, func)
{
    if(cond == false) return func();
    
    var gatewayUrl = flashvars.string_gatewayUrl;
    var _loc1_ = gatewayUrl;

    var _loc2_ = gatewayUrl;
    var _loc3_ = _loc2_.lastIndexOf("?h=") + 3;
    var _loc7_ = _loc2_.substr(_loc3_, _loc2_.length - _loc3_);

    var _loc4_ = jsons;
    var _loc8_ = CryptoJS.MD5(_loc7_ + "forgeofempires" + _loc4_).toString();
    _loc8_ = _loc8_.substr(0,10);
    var s_data = jsons;

    $.ajax({
        type: "POST",
        url: _loc2_,
        dataType: 'json',
        processData: false,
        contentType: 'application/json',
        headers: {
          'Signature' : _loc8_,
          'Client-Identification' : 'version=1.99; requiredVersion=1.99; platform=bro; platformVersion=web'
        },
        data: s_data,
        success: func
    });
    
}

var main_data;
var finished = '';
var start_p = [];
var treshure = false;

var css = function() { /*!
<style type="text/css" media="screen">
    #FOEHelper {
       background-color: #3A3A3A;
       font-size: 12px;
       font-family: Verdana;
       color: white;
       line-height: 25px;
    }
    
    #FOEHelper a {
       text-decoration: none;
       color: #ababab;
    }
    
    #FOEHelper a:hover {
       text-decoration: underline;
       color: white;
    }
    
    #FOEHelper #get_all {
       float: left;
       padding: 5px 10px;
    }
    
    .FOEH_left {
       float: left;
    }
    
    .FOEH_right {
       float: right;
    }
    
    .FOEH_left, .FOEH_right {
       padding: 0px 15px;
    }
    
    .FOEH_icon {
       display: inline-block;
       height: 15px;
       width: 15px;
       background-image: url("http://i.imgur.com/eCADyot.png");
       background-repeat: none;
    }
    
    .FOEH_reload {
       background-position: -177px -22px;
    }
</style>
*/}.extractComment();

var scripts = function() { /*!
<script type="text/javascript">
       function createOnResize() {
        getBrowser();
        window.onresize = function() {
          var el = document.getElementById("content");
          var ic = document.getElementById("imageContent");
          var size = getViewportSize();
          // Detect if InternetExplorer is used, because we need a workaround. IE9 do not use the 100% initially in a correct way
          if (!isInternetExplorer) {
            el.style.width = ic.style.width = size[0] < 950 ? "950px" : "100%";
            el.style.height = ic.style.height = size[1] < 550 ? "550px" : "100%";
          } else {
            el.style.width = ic.style.width = size[0] < 950 ? "950px" : size[0] + "px";
            el.style.height = ic.style.height = size[1] < 550 ? "550px" : size[1] + "px";
          }
                  el.style.height = size[1] - 25 + "px";
        };
       }
       
       function hideScreenshot() {
          $('#foe_clan_forum, #payment, #smallpayment, #abort, #closeForumPopup, #closePopup, #gift_image').remove();
          $('#content').css({'top': 25});
          $('#imageContent').hide();
        }
</script>
*/}.extractComment();

function mainRefresh(func, refresh)
{
       var undef = (refresh === undefined);
  
       if(undef) $('#FOEHelper .main_cd').remove();
       
       postFoe(true, '[{"__class__":"ServerRequest","requestMethod":"getData","requestData":[],"requestId":0,"requestClass":"StartupService"}]', function (r) {  
           
           if(undef) $('#FOEHelper .FOEH_right').append('<span class="main_cd" data-seconds="' + (60 * getRandomInt(6, 10)) + '"></span>');
           
           main_data = r;
         
           $(r).each(function(){
               //console.log(this);
               if(this.requestMethod == 'getData')
               {
                   $(this.responseData.city_map.entities).each(function(){
                       if(this.state.__class__ == 'ProductionFinishedState') 
                       {
                         finished += this.id + ',';
                       }
                       if(this.type == 'production' && this.state.__class__ == 'IdleState') 
                       {
                         start_p.push(this.id);
                         //console.log(this);
                       }
                   }); 
                 
                   finished = finished.substr(0, finished.length-1); 
               }
             
               if(this.requestMethod == 'getCurrentChest')
               {
                       if(this.responseData.state.__class__ == 'TreasureChestCollectable') 
                       {
                           treshure = true;
                       }
               }
           })
           console.log('main refresh');
           if(undef) $(".main_cd").kkcountdown({displayDays: false, displayHours: false, callback: function() { mainRefresh(func); } });
         
           return func();
       });    
}

function supportAll(sup)
{
    if(sup.length == 0) return false;
  
    var f_el = sup.shift();
    console.log(f_el);
    
    if(f_el.next_interaction_in == 0 || f_el.next_interaction_in === undefined) 
    {
      postFoe(true, '[{"requestClass":"OtherPlayerService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"polivateRandomBuilding","__class__":"ServerRequest","requestId":99,"requestData":[' + f_el.player_id  + ']}]', function() {
        setTimeout(supportAll(sup), 1200);
      });
    } else {
        supportAll(sup);
    }
}

function start_pAll(sup, func)
{  
    if(sup.length == 0) return func();
  
    var f_el = sup.shift();
    console.log(f_el);
    
    postFoe(true, '[{"requestMethod":"startProduction","__class__":"ServerRequest","requestId":6,"requestData":[' + f_el + ',2],"requestClass":"CityProductionService","clientIdentification":{"registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71"}}]', function() {
        setTimeout(start_pAll(sup, func), 800);
    });
}

// start prod - [{"requestMethod":"startProduction","__class__":"ServerRequest","requestId":6,"requestData":[9,1],"requestClass":"CityProductionService","clientIdentification":{"registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71"}}]
// wsparcie - [{"requestClass":"OtherPlayerService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"polivateRandomBuilding","__class__":"ServerRequest","requestId":99,"requestData":[1110953]}]
// sasiedzi - [{"requestId":1,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[{"cup14AnimsEnabled":true,"gbInfoScreenBlueprintTrigger":2,"gbInfoScreenHintTrigger":0,"displayedFriendInviteScreen":true,"displayedFirstDepositScreen":0,"backgroundSound":false,"tutorialSaveStep":"","effectSound":false,"showCityAnimations":true,"showPremiumConfirmDialog":true,"__class__":"Settings","packagesInterstitial":false,"showEasterInfoScreen":true,"zoomFactor":0.6,"showTournamentNotParticipated":true,"animationSpeedup":1,"showGuildInfoScreen":false,"hideSocialBar":false,"showSummerInfoScreen":true,"volume":0.166667,"showEventInfoScreen":true,"socialBarTab":2,"enableOtherCityAnimations":false,"chatHidden":true,"enableSmokeAnimations":true,"highlightUnattachedUnits":false,"displayedGvgScreenContinent":false,"displayedGvgScreenProvinces":false,"displayedGvgScreenSectors":false,"pushNotifications":null}],"requestClass":"SettingsService","requestMethod":"updateSettings","__class__":"ServerRequest"},{"requestId":2,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[],"requestClass":"OtherPlayerService","requestMethod":"getNeighborList","__class__":"ServerRequest"},{"requestId":3,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[],"requestClass":"OtherPlayerService","requestMethod":"getNeighborList","__class__":"ServerRequest"},{"requestId":4,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[{"value":"336","type":"vram","__class__":"Specification"}],"requestClass":"LogService","requestMethod":"logSpecification","__class__":"ServerRequest"}]
// gildowicze - [{"requestClass":"SettingsService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"updateSettings","__class__":"ServerRequest","requestId":7,"requestData":[{"displayedGvgScreenProvinces":false,"displayedGvgScreenSectors":false,"pushNotifications":null,"cup14AnimsEnabled":true,"gbInfoScreenBlueprintTrigger":2,"gbInfoScreenHintTrigger":0,"displayedFriendInviteScreen":true,"displayedFirstDepositScreen":0,"__class__":"Settings","tutorialSaveStep":"","effectSound":false,"showCityAnimations":true,"showPremiumConfirmDialog":true,"backgroundSound":false,"packagesInterstitial":false,"volume":0.166667,"showEasterInfoScreen":true,"zoomFactor":0.6,"showTournamentNotParticipated":true,"animationSpeedup":1,"showGuildInfoScreen":false,"hideSocialBar":false,"showSummerInfoScreen":true,"chatHidden":true,"showEventInfoScreen":true,"socialBarTab":1,"enableOtherCityAnimations":false,"enableSmokeAnimations":true,"highlightUnattachedUnits":false,"displayedGvgScreenContinent":false}]},{"requestClass":"OtherPlayerService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"getClanMemberList","__class__":"ServerRequest","requestId":8,"requestData":[]}]


$('head').append(css).append(scripts);

$(document).ready(function()
{
   
var FOE_html = function() { /*!
<div id="FOEHelper" style="height: 25px;">
  <div class="FOEH_left">
    <a id="support_all" href="#">Wesprzyj</a> <a id="collect_all" href="#" style="display: none;">Zbierz</a> <a id="t_collect" href="#" style="display: none;">Skarb</a>
  </div>
  <div class="FOEH_right">
    <a id="get_all" href="#"><span class="FOEH_icon FOEH_reload"></span></a>
  </div>
</div>
*/}.extractComment();
    
    $('body').prepend(FOE_html);
    
    $('#container').wrap('<div style="height: 50%;"></div>');
    
    /*
    *   ==== MAIN REFRESH ===
    */
    $('#FOEHelper #get_all').click(function() {
       
       mainRefresh(function() {
           console.log('get all');
           if(finished != '' || start_p.length > 0)
           {
             $('#collect_all').show();
             $('#FOEHelper #collect_all').trigger('click');
           }
         
           if(treshure == true) 
           {
             $('#t_collect').show();
             $('#FOEHelper #t_collect').trigger('click');
           }
       });
        
       return false;
    });
    
    $('#FOEHelper #support_all').click(function() {
      
      var res = postFoe(true, '[{"requestClass":"SettingsService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"updateSettings","__class__":"ServerRequest","requestId":7,"requestData":[{"displayedGvgScreenProvinces":false,"displayedGvgScreenSectors":false,"pushNotifications":null,"cup14AnimsEnabled":true,"gbInfoScreenBlueprintTrigger":2,"gbInfoScreenHintTrigger":0,"displayedFriendInviteScreen":true,"displayedFirstDepositScreen":0,"__class__":"Settings","tutorialSaveStep":"","effectSound":false,"showCityAnimations":true,"showPremiumConfirmDialog":true,"backgroundSound":false,"packagesInterstitial":false,"volume":0.166667,"showEasterInfoScreen":true,"zoomFactor":0.6,"showTournamentNotParticipated":true,"animationSpeedup":1,"showGuildInfoScreen":false,"hideSocialBar":false,"showSummerInfoScreen":true,"chatHidden":true,"showEventInfoScreen":true,"socialBarTab":1,"enableOtherCityAnimations":false,"enableSmokeAnimations":true,"highlightUnattachedUnits":false,"displayedGvgScreenContinent":false}]},{"requestClass":"OtherPlayerService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"getClanMemberList","__class__":"ServerRequest","requestId":8,"requestData":[]}]', function (r) {
           $(r).each(function(){
               console.log(this);
               if(this.requestMethod == 'getClanMemberList')
               {
                  supportAll(this.responseData);
                  return false;
               }
           });
       });
       
       var res = postFoe(true, '[{"requestId":1,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[{"cup14AnimsEnabled":true,"gbInfoScreenBlueprintTrigger":2,"gbInfoScreenHintTrigger":0,"displayedFriendInviteScreen":true,"displayedFirstDepositScreen":0,"backgroundSound":false,"tutorialSaveStep":"","effectSound":false,"showCityAnimations":true,"showPremiumConfirmDialog":true,"__class__":"Settings","packagesInterstitial":false,"showEasterInfoScreen":true,"zoomFactor":0.6,"showTournamentNotParticipated":true,"animationSpeedup":1,"showGuildInfoScreen":false,"hideSocialBar":false,"showSummerInfoScreen":true,"volume":0.166667,"showEventInfoScreen":true,"socialBarTab":2,"enableOtherCityAnimations":false,"chatHidden":true,"enableSmokeAnimations":true,"highlightUnattachedUnits":false,"displayedGvgScreenContinent":false,"displayedGvgScreenProvinces":false,"displayedGvgScreenSectors":false,"pushNotifications":null}],"requestClass":"SettingsService","requestMethod":"updateSettings","__class__":"ServerRequest"},{"requestId":2,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[],"requestClass":"OtherPlayerService","requestMethod":"getNeighborList","__class__":"ServerRequest"},{"requestId":3,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[],"requestClass":"OtherPlayerService","requestMethod":"getNeighborList","__class__":"ServerRequest"},{"requestId":4,"clientIdentification":{"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null,"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null},"requestData":[{"value":"336","type":"vram","__class__":"Specification"}],"requestClass":"LogService","requestMethod":"logSpecification","__class__":"ServerRequest"}]', function (r) {
          $(r).each(function(){
               console.log(this);
               if(this.requestMethod == 'getNeighborList')
               {
                  supportAll(this.responseData);
                  return false;
               }
           });
       });
      
       return false;
    });
  
    $('#FOEHelper #collect_all').click(function() {
       console.log('collect all');
       var res = postFoe((finished != ''), '[{"requestClass":"CityProductionService","clientIdentification":{"platform":"bro","osVersion":null,"clientVersionNumber":"1.71","registrationId":null,"platformType":null,"requiredBackendVersion":"1.71","androidDeviceId":null,"localeWithPlatform":null,"refMarketingId":null,"platformVersion":"web","__class__":"ClientIdentification","deviceId":null,"appType":null},"requestMethod":"pickupProduction","__class__":"ServerRequest","requestId":0,"requestData":[[' + finished + ']]}]', function (r) {
           console.log('after collect');
           mainRefresh(function() {
              console.log('collect main refresh');
              start_pAll(start_p, function(){
                  document.location.reload();
              });
           }, false);
       });
       
       return false;
    });
    
    $('#FOEHelper #t_collect').click(function() {

      var res = postFoe(treshure, '[{"clientIdentification":{"androidDeviceId":null,"localeWithPlatform":null,"platform":"bro","clientVersionNumber":"1.71","refMarketingId":null,"platformVersion":"web","requiredBackendVersion":"1.71","deviceId":null,"appType":null,"__class__":"ClientIdentification","platformType":null,"osVersion":null,"registrationId":null},"requestClass":"TreasureHuntService","__class__":"ServerRequest","requestMethod":"collectTreasure","requestId":0,"requestData":[]}]', function (r) {
           document.location.reload();
       });
      
       return false;
    });
  
    $('#FOEHelper #get_all').trigger('click');
    
});
